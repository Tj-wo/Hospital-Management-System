<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.pahappa</groupId>
    <artifactId>hospital-management-system</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>

        <!-- Dependency Versions -->
        <jakarta.platform.version>8.0.0</jakarta.platform.version>
        <!--
        ======================================================================
        === CRITICAL FIX: ALIGNED PRIMEFACES VERSION WITH YOUR CODE        ===
        ======================================================================
        Your code uses the old Chart API (org.primefaces.model.chart.*).
        Version 8.0 is a stable choice that matches your code and resolves
        the ClassCastException and related startup errors.
        -->
        <primefaces.version>12.0.0</primefaces.version>
        <omnifaces.version>3.13</omnifaces.version>
        <hibernate.version>5.6.15.Final</hibernate.version>
        <mysql.connector.version>8.0.33</mysql.connector.version>
        <jbcrypt.version>0.4</jbcrypt.version>
        <junit.jupiter.version>5.9.2</junit.jupiter.version>
        <maven.surefire.plugin.version>3.0.0-M7</maven.surefire.plugin.version>
    </properties>

    <dependencies>

        <!--
        ======================================================================
        === 1. JAKARTA EE WEB APIS (PROVIDED BY SERVER)                    ===
        ======================================================================
        This provides all necessary web APIs (Servlet, JSF, CDI) for compilation.
        The <scope>provided</scope> is essential: it tells Maven NOT to package
        these into your .war file, as the Tomcat server provides them.
        -->
        <dependency>
            <groupId>jakarta.platform</groupId>
            <artifactId>jakarta.jakartaee-web-api</artifactId>
            <version>${jakarta.platform.version}</version>
            <scope>provided</scope>
        </dependency>

        <!--
        ======================================================================
        === 2. JSF & CDI IMPLEMENTATIONS (PACKAGED IN WAR)                 ===
        ======================================================================
        Tomcat does not include JSF or CDI implementations, so you must provide
        them. These will be packaged into your application's WEB-INF/lib folder.
        -->
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>jakarta.faces</artifactId>
            <version>2.3.20</version> <!-- Mojarra JSF Implementation -->
        </dependency>
        <dependency>
            <groupId>org.jboss.weld.servlet</groupId>
            <artifactId>weld-servlet-shaded</artifactId>
            <version>3.1.9.Final</version> <!-- Weld CDI Implementation -->
        </dependency>

        <!--
        ======================================================================
        === 3. UI AND COMPONENT LIBRARIES                                  ===
        ======================================================================
        -->
        <dependency>
            <groupId>org.primefaces</groupId>
            <artifactId>primefaces</artifactId>
            <version>${primefaces.version}</version>
        </dependency>
        <dependency>
            <groupId>org.omnifaces</groupId>
            <artifactId>omnifaces</artifactId>
            <version>${omnifaces.version}</version>
        </dependency>

        <!--
        ======================================================================
        === 4. DATABASE AND PERSISTENCE                                    ===
        ======================================================================
        -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>${hibernate.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-c3p0</artifactId>
            <version>${hibernate.version}</version>
        </dependency>
        <dependency>
            <groupId>com.mysql</groupId>
            <artifactId>mysql-connector-j</artifactId>
            <version>${mysql.connector.version}</version>
        </dependency>

        <!--
        ======================================================================
        === 5. UTILITIES                                                   ===
        ======================================================================
        -->
        <dependency>
            <groupId>org.mindrot</groupId>
            <artifactId>jbcrypt</artifactId>
            <version>${jbcrypt.version}</version>
        </dependency>

        <!--
        ======================================================================
        === 6. TESTING                                                     ===
        ======================================================================
        -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.3.2</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire.plugin.version}</version>
            </plugin>
        </plugins>
    </build>
</project>